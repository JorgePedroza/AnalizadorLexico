/* Generated By:JavaCC: Do not edit this line. analizadorConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface analizadorConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int MAIN = 4;
  /** RegularExpression Id. */
  int END = 5;
  /** RegularExpression Id. */
  int INT = 6;
  /** RegularExpression Id. */
  int DECIMAL = 7;
  /** RegularExpression Id. */
  int STRING = 8;
  /** RegularExpression Id. */
  int BOOLEAN = 9;
  /** RegularExpression Id. */
  int ASIGNACION = 10;
  /** RegularExpression Id. */
  int PLUS_EQ = 11;
  /** RegularExpression Id. */
  int MINUS_EQ = 12;
  /** RegularExpression Id. */
  int TIMES_EQ = 13;
  /** RegularExpression Id. */
  int DIVIDE_EQ = 14;
  /** RegularExpression Id. */
  int AND = 15;
  /** RegularExpression Id. */
  int OR = 16;
  /** RegularExpression Id. */
  int NOT = 17;
  /** RegularExpression Id. */
  int EQ = 18;
  /** RegularExpression Id. */
  int COLON = 19;
  /** RegularExpression Id. */
  int BIG = 20;
  /** RegularExpression Id. */
  int BIGEQ = 21;
  /** RegularExpression Id. */
  int LESS = 22;
  /** RegularExpression Id. */
  int LESSEQ = 23;
  /** RegularExpression Id. */
  int DOUBLECOMMA = 24;
  /** RegularExpression Id. */
  int NOTEQ = 25;
  /** RegularExpression Id. */
  int DIGITS = 26;
  /** RegularExpression Id. */
  int CHAR = 27;
  /** RegularExpression Id. */
  int IDENTIFIER = 28;
  /** RegularExpression Id. */
  int NUMBER = 29;
  /** RegularExpression Id. */
  int LPAREN = 30;
  /** RegularExpression Id. */
  int RPAREN = 31;
  /** RegularExpression Id. */
  int LBRACKET = 32;
  /** RegularExpression Id. */
  int RBRACKET = 33;
  /** RegularExpression Id. */
  int lBRACE = 34;
  /** RegularExpression Id. */
  int RBRACE = 35;
  /** RegularExpression Id. */
  int PLUS = 36;
  /** RegularExpression Id. */
  int MINUS = 37;
  /** RegularExpression Id. */
  int TIMES = 38;
  /** RegularExpression Id. */
  int DIVIDE = 39;
  /** RegularExpression Id. */
  int INCR = 40;
  /** RegularExpression Id. */
  int DECR = 41;
  /** RegularExpression Id. */
  int IF = 42;
  /** RegularExpression Id. */
  int ELSE = 43;
  /** RegularExpression Id. */
  int ELSE_IF = 44;
  /** RegularExpression Id. */
  int IF = 37;
  /** RegularExpression Id. */
  int WHILE = 38;
  /** RegularExpression Id. */
  int FOR = 39;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"def Main\"",
    "\"end\"",
    "\"int\"",
    "\"decimal\"",
    "\"String\"",
    "\"bool\"",
    "\"=\"",
    "\"+=\"",
    "\"-=\"",
    "\"*=\"",
    "\"/=\"",
    "\"and\"",
    "\"or\"",
    "\"not\"",
    "\"==\"",
    "\":\"",
    "\">\"",
    "\">=\"",
    "\"<\"",
    "\"<=\"",
    "\"\\\"\"",
    "\"notEq\"",
    "<DIGITS>",
    "<CHAR>",
    "<IDENTIFIER>",
    "<NUMBER>",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\"{\"",
    "\"}\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"++\"",
    "\"--\"",
    "\"if\"",
    "\"while\"",
    "\"for\"",
  };

}
