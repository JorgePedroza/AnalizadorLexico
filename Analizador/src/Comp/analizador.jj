PARSER_BEGIN(analizador)

public class analizador {
    public static void main(String[] args) throws ParseException, Exception{
	try {
	    analizador parser = new analizador(System.in);
	    parser.Input();
        System.out.println("El analizador ha terminado sin errores");
	} catch (ParseException e) {
	    System.out.println(e.getMessage());
        System.out.println("Se han encontrado errores");
	}
    }
}

PARSER_END(analizador)

SKIP :
{
    " " |
    "\t" |
    "\n" |
    "\r" |
    "\r\n"

}
TOKEN : {
    <DEF : "def">{System.out.println("Main function -> " + image);}|
    <END : "end">{System.out.println("end -> " + image);}
}

TOKEN : {
    <INT : "int">{System.out.println("integer -> " + image);}|
    <DECIMAL : "decimal">{System.out.println("decimal -> " + image);}|
    <STRING : "String">{System.out.println("String -> " + image);}|
    <BOOLEAN : "bool">{System.out.println("bool -> " + image);}|
    <ASIGNACION : "=">{System.out.println("Equal -> " + image);}|
    <PLUS_EQ : "+=">{System.out.println("Plus equal -> " + image);}|
    <MINUS_EQ : "-=">{System.out.println("Minus equal -> " + image);}|
    <TIMES_EQ : "*=">{System.out.println("Times equal -> " + image);}|
    <DIVIDE_EQ : "/=">{System.out.println("Divide equal -> " + image);}| 
    <AND : "and">{System.out.println("and -> " + image);}|
    <OR : "or">{System.out.println("or -> " + image);}|
    <NOT : "not">{System.out.println("not -> " + image);}|
    <EQ : "==">{System.out.println("Equal -> " + image);}|
    <COLON : ":">{System.out.println("Double colon -> " + image);}|
    <BIG : ">">{System.out.println("Biggest -> " + image);}|
    <BIGEQ : ">=">{System.out.println("Biggest equal -> " + image);}|
    <LESS : "<">{System.out.println("Minus -> " + image);}|
    <LESSEQ : "<=">{System.out.println("Minus equal -> " + image);}|
    <DOUBLECOMMA: "\"">{System.out.println("Double comma -> " + image);}| 
    <NOTEQ : "notEq">{System.out.println("Not equal -> " + image);}
}
TOKEN : {
    <IDENTIFIER : ["a"-"z","A"-"Z"](["a"-"z","A"-"Z","0"-"9","_"])*>{System.out.println("Identifier -> " + image);}|
    <NUMBER : (["0"-"9"])|(["0"-"9"])"."(["0"-"9"])|(["0"-"9"])"."|"."(["0"-"9"])>{System.out.println("Number -> " + image);}
    
}
TOKEN : {
    <LPAREN : "(">{System.out.println("Left paren -> " + image);}|
    <RPAREN : ")">{System.out.println("Right paren -> " + image);}|
    <LBRACKET : "[">{System.out.println("Left bracket -> " + image);}|
    <RBRACKET : "]">{System.out.println("Right bracket -> " + image);}|
    <lBRACE : "{">{System.out.println("Left brace -> " + image);}|
    <RBRACE : "}">{System.out.println("Right brace -> " + image);}
}
TOKEN : {
    <PLUS : "+">{System.out.println("Plus -> " + image);}|
    <MINUS : "-">{System.out.println("Minus -> " + image);}|
    <TIMES : "*">{System.out.println("Times -> " + image);}|
    <DIVIDE : "/">{System.out.println("Divide -> " + image);}|
    <INCR : "++">{System.out.println("Increment -> " + image);}|
    <DECR : "--">{System.out.println("Decrement -> " + image);}
}
//Sentencias
TOKEN : {
    <IF : "if">{System.out.println("if -> " + image);}|
    <ELSE : "else">{System.out.println("else -> " + image); }|
    <ELSE_IF : "else if">{System.out.println("else if ->" + image); }|
    <BREAK : "break">{System.out.println("break -> " + image);}
}
//Ciclos
TOKEN : {
    <WHILE : "while">{System.out.println("while -> " + image);}|
    <FOR : "for">{System.out.println("for -> " + image);}
}
void Input() :
{
}
{
    <DEF>
    <IDENTIFIER>
    <COLON>
    Code()
    <END>
    <EOF> 
}
void Code() :
{}
{
    Sentencias()
}
void Variables() :
{}
{
    (<INT>|<DECIMAL>|<STRING>|<BOOLEAN>)<IDENTIFIER>
}
void Sentencias() :
{}
{
    Variables()|
    SentenciaIf()|
    SentenciaFor()|
    SentenciaWhile()|
}
