PARSER_BEGIN(analizador)

public class analizador {
    public static void main(String[] args) throws ParseException, Exception{
	try {
	    analizador parser = new analizador(System.in);
	    parser.Input();
        System.out.println("El analizador ha terminado sin errores");
	} catch (ParseException e) {
	    System.out.println(e.getMessage());
        System.out.println("Se han encontrado errores");
	}
    }
}

PARSER_END(analizador)

SKIP :
{
    " " |
    "\t" |
    "\n" |
    "\r" 
}
TOKEN : {
    <MAIN : "def Main">{System.out.println("Main -> " + image);}
}

TOKEN : {
    <INT : "int">|
    <DECIMAL : "decimal">|
    <STRING : "String">|
    <BOOLEAN : "bool">|
    <ASIGNACION : "=">|
    <AND : "and">|
    <OR : "or">|
    <NOT : "not">|
    <EQ : "==">|
    <COLON : ":">|
    <BIG : ">">|
    <BIGEQ : ">=">|
    <LESS : "<">|
    <LESSEQ : "<=">|
    <DOUBLECOMMA: "\""> 
}
TOKEN : {
    <#DIGITS : (["0"-"9"])+>|
    <#CHAR : (["a"-"z","A"-"Z"])+>|
    <IDENTIFIER : <CHAR>(<DIGITS>|<CHAR>)*";">|
    <NUMBER : <DIGITS>|<DIGITS>"."<DIGITS>|<DIGITS>"."|"."<DIGITS>>
    
}
TOKEN : {
    <LPAREN : "(">|
    <RPAREN : ")">|
    <LBRACKET : "[">|
    <RBRACKET : "]">|
    <lBRACE : "{">|
    <RBRACE : "}">
}
TOKEN : {
    <PLUS : "+">|
    <MINUS : "-">|
    <TIMES : "*">|
    <DIVIDE : "/">|
    <INCR : "++">|
    <DECR : "--">
}
//Sentencias
TOKEN : {
    <IF : "if">{System.out.println("if -> " + image);}
}
void Input() :
{}
{
    <MAIN>
    <lBRACE>
    //Codigo()
    <RBRACE>
    <EOF> 
}
